AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - uat
      - prod
    Description: Enter dev, uat or prod. Default is dev
  Region:
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
    Description: This value will be replace by the value of the TemplateConfiguration file. The Region from the cli script need to be on the allowed values list.

Resources:
  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      Family: welcome-app
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue: !Sub "${Environment}-CodePipelines-Role-Arn"
      TaskRoleArn:
        Fn::ImportValue: !Sub "${Environment}-CodePipelines-Role-Arn"
      ContainerDefinitions:
        - Name: welcome-app
          Image: 101391583334.dkr.ecr.us-east-1.amazonaws.com/welcome-app
          Cpu: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 3000
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: 'welcome'
              awslogs-region: !Sub ${Region}
              awslogs-stream-prefix: 'welcome-app'
      
  Service:
    Type: AWS::ECS::Service
    DependsOn:
      - ListenerRule
      - Task
    Properties:
      ServiceName: welcome-app
      TaskDefinition:
        Fn::Join: ["", ["arn:aws:ecs:", { "Ref": "AWS::Region" },":", { "Ref": "AWS::AccountId" },":", "task-definition/welcome-app"]]
      Cluster:
        Fn::ImportValue: !Sub "${Environment}-ECSCluster"
      LaunchType: FARGATE
      DesiredCount: 2
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Fn::ImportValue: !Sub "${Environment}-DmzSubnet-${Region}a"
            - Fn::ImportValue: !Sub "${Environment}-DmzSubnet-${Region}b"
          SecurityGroups:
            - Fn::ImportValue: !Sub "${Environment}-ContainerSecurityGroup"
      LoadBalancers:
        - ContainerName: welcome-app
          ContainerPort: 3000
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: welcome-app
      VpcId:
        Fn::ImportValue: !Sub "${Environment}-VPC-${AWS::Region}"
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      TargetType: ip

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn:
        Fn::ImportValue: !Sub "${Environment}-Listener"
      Priority: 1
      Conditions:
        - Field: path-pattern
          Values:
            - /
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward


Outputs:

  ApiEndpoint:
    Description: Books API Endpoint
    Value: !Join ['', ['http://', Fn::ImportValue: !Sub "${Environment}-DomainName", '/api/books']]
    Export:
      Name: 'BooksApiEndpoint'
