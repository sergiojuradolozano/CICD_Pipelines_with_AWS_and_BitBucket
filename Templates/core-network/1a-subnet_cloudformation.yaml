AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - uat
      - prod
    Description: Enter dev, uat or prod. Default is dev

  Region:
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
    Description: This value will be replace by the value of the TemplateConfiguration file. The Region from the cli script need to be on the allowed values list.

  Network:
    Type: String
    Default: 10.160
    Description: This value will be replace by the value of the TemplateConfiguration file

Resources:
  DmzSubnet:
    Type: AWS::EC2::Subnet
    Properties: 
      CidrBlock: !Sub "${Network}.1.0/24"
      AvailabilityZone: !Sub "${Region}a"
      VpcId: 
        Fn::ImportValue: 
          !Sub "${Environment}VPC-${AWS::Region}" 
      Tags:
        - Key: "Name"
          Value: !Sub "DMZ ${Region}a"

  DmzSubnetRouteTable: 
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: 
        Fn::ImportValue: 
          !Sub "${Environment}VPC-${AWS::Region}"
      Tags: 
        - Key: "Name"
          Value: " DMZ"
        
  DmzInternetSubnetRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref DmzSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:          
        Fn::ImportValue: 
          !Sub "${Environment}IGW-${AWS::Region}" 
   
  DmzSubnetRouteTableAssociaton: 
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref DmzSubnetRouteTable
      SubnetId: !Ref DmzSubnet
           
       
  DmzSubnetACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: 
        Fn::ImportValue: 
          !Sub "${Environment}DmzSubnetACL-${Region}a"
      SubnetId: !Ref DmzSubnet

  InternalSubnet:
    Type: AWS::EC2::Subnet
    Properties: 
      CidrBlock: !Sub "${Network}.10.0/24"
      AvailabilityZone: !Sub "${Region}a"
      VpcId: 
        Fn::ImportValue: 
          !Sub "${Environment}VPC-${AWS::Region}"
      Tags:
      - Key: "Name"
        Value: !Sub "Internal ${Region}a"
 
  InternalSubnetRouteTable: 
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: 
        Fn::ImportValue: 
          !Sub "${Environment}VPC-${AWS::Region}" 
      Tags:
      - Key: "Name"
        Value: "Internal Route Table"
        
  InternalSubnetRouteTableAssociaton: 
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref InternalSubnetRouteTable
      SubnetId: !Ref InternalSubnet
           
  InternalSubnetACLAssocitaion: 
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: 
        Fn::ImportValue: 
          !Sub "${Environment}InternalSubnetACL-${Region}a"
      SubnetId: !Ref InternalSubnet
      
Outputs:
  InternalSubnet: 
    Value: !Ref InternalSubnet
    Export:
      Name: !Sub "${Environment}InternalSubnet-${Region}a"

  InternalSubnetRouteTable: 
    Value: !Ref InternalSubnetRouteTable
    Export:
      Name: !Sub "${Environment}InternalSubnetRouteTable-${Region}a"

  primaryInternalSubnet: 
    Value: !Ref InternalSubnet
    Export:
      Name: !Sub "${Environment}-primaryInternalSubnet-${AWS::Region}"

  DmzSubnet: 
    Value: !Ref DmzSubnet
    Export:
      Name: !Sub "${Environment}DmzSubnet-${Region}a"
