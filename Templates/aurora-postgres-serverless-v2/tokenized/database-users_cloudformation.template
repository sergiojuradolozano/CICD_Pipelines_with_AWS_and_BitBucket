AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::SecretsManager-2020-07-23
Description: SIX  postgresql database users
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - uat
      - prod
    Description: Enter dev, uat or prod. Default is dev

Conditions:
  isProd: !Equals  [!Ref Environment, prod]
  isDev: !Equals  [!Ref Environment, dev]

Resources:
  analystDbUserCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${Environment}-analystDbUserCredentials
      Description: Database credentials for analyst user
      GenerateSecretString:
        SecretStringTemplate: '{"username": "analyst"}'
        GenerateStringKey: "password"
        PasswordLength: 20
        ExcludeCharacters: '"@/\'

  analystDbUserCredentialsAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref analystDbUserCredentials
      TargetId: !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${Environment}-aurora-postgresql-serverless-db-cluster
      TargetType: AWS::RDS::DBCluster

  analystDbUserCredentialsRotationSchedule:
    Type: AWS::SecretsManager::RotationSchedule
    Properties:
      SecretId: !Ref analystDbUserCredentials
      HostedRotationLambda:
        RotationType: "PostgreSQLSingleUser"
        RotationLambdaName: !Sub ${Environment}-AnalystDbUser-SecretsManagerRotation
        VpcSecurityGroupIds:
          Fn::ImportValue: !Sub ${Environment}-rds-access
        VpcSubnetIds:
          Fn::ImportValue: !Sub "${Environment}InternalSubnet-@@DB_AVAILABILITY_ZONE_ONE@@"
      RotationRules:
        AutomaticallyAfterDays: 30

  cubaAppsDbUserCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${Environment}-cubaAppsDbUserCredentials
      Description: Database credentials for CUBA application with read write update access
      GenerateSecretString:
        SecretStringTemplate: '{"username": "cuba_apps"}'
        GenerateStringKey: "password"
        PasswordLength: 20
        ExcludeCharacters: '"@/\'

  cubaAppsDbUserCredentialsAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref cubaAppsDbUserCredentials
      TargetId: !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${Environment}-aurora-postgresql-serverless-db-cluster
      TargetType: AWS::RDS::DBCluster

  cubaAppsDbUserCredentialsRotationSchedule:
    Type: AWS::SecretsManager::RotationSchedule
    Properties:
      SecretId: !Ref cubaAppsDbUserCredentials
      HostedRotationLambda:
        RotationType: "PostgreSQLSingleUser"
        RotationLambdaName: !Sub ${Environment}-CubaAppsDbUser-SecretsManagerRotation
        VpcSecurityGroupIds:
          Fn::ImportValue: !Sub ${Environment}-rds-access
        VpcSubnetIds:
          Fn::ImportValue: !Sub "${Environment}InternalSubnet-@@DB_AVAILABILITY_ZONE_ONE@@"
      RotationRules:
        AutomaticallyAfterDays: 30
  
  corpActionAppsUserCredentialsAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Fn::ImportValue: !Sub ${Environment}-corporate-action-apps-credentials
      TargetId: !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${Environment}-aurora-postgresql-serverless-db-cluster
      TargetType: AWS::RDS::DBCluster

  corpActionAppsUserCredentialsRotationSchedule:
    Type: AWS::SecretsManager::RotationSchedule
    Properties:
      SecretId: 
        Fn::ImportValue: !Sub ${Environment}-corporate-action-apps-credentials
      HostedRotationLambda:
        RotationType: "PostgreSQLSingleUser"
        RotationLambdaName: !Sub ${Environment}-CorpActionServiceApps-SecretsManagerRotation
        VpcSecurityGroupIds:
          Fn::ImportValue: !Sub ${Environment}-rds-access
        VpcSubnetIds:
          Fn::ImportValue: !Sub "${Environment}InternalSubnet-@@DB_AVAILABILITY_ZONE_ONE@@"
      RotationRules:
        AutomaticallyAfterDays: 30

  sixRefDataAppsDbUserCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${Environment}-sixRefDataAppsDbUserCredentials
      Description: Database credentials for REF_DATA_APPS user
      GenerateSecretString:
        SecretStringTemplate: '{"username": "ref_data_apps"}'
        GenerateStringKey: "password"
        PasswordLength: 20
        ExcludeCharacters: '"@/\'

  sixRefDataAppsDbUserCredentialsAttachment:
    DependsOn: sixRefDataAppsDbUserCredentials
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref sixRefDataAppsDbUserCredentials
      TargetId: !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${Environment}-aurora-postgresql-serverless-db-cluster
      TargetType: AWS::RDS::DBCluster

  sixRefDataAppsDbUserCredentialsRotationSchedule:
    DependsOn: sixRefDataAppsDbUserCredentials
    Type: AWS::SecretsManager::RotationSchedule
    Properties:
      SecretId: !Ref sixRefDataAppsDbUserCredentials
      HostedRotationLambda:
        RotationType: "PostgreSQLSingleUser"
        RotationLambdaName: !Sub ${Environment}-SixRefDataApps-SecretsManagerRotation
        VpcSecurityGroupIds:
          Fn::ImportValue: !Sub ${Environment}-rds-access
        VpcSubnetIds:
          Fn::ImportValue: !Sub "${Environment}InternalSubnet-@@DB_AVAILABILITY_ZONE_ONE@@"
      RotationRules:
        AutomaticallyAfterDays: 30

Outputs:
  refDataUserSecretLocation:
    Value: !Ref sixRefDataAppsDbUserCredentials
    Export:
      Name: !Sub ${Environment}-six-ref-data-apps-credentials
        