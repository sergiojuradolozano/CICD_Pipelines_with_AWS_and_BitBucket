AWSTemplateFormatVersion: '2010-09-09'
Description: 'Role and Policy for CodePipelines'
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - uat
      - prod
    Description: Enter dev, uat or prod. Default is dev

  Region:
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
    Description: This value will be replace by the value of the TemplateConfiguration file. The Region from the cli script need to be on the allowed values list.

Resources:
  CodePipelinesRole:
    Type: "AWS::IAM::Role"
    Properties:
      Tags:
        - Key: Environment
          Value: !Sub Environment
        - Key: Package
          Value: core-network
        - Key: Application
          Value: INFRA
      RoleName: !Sub "${Environment}-CodePipelines-Role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"
  RolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "CodePipelines-Role"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:

          - Sid: CodeStar
            Effect: Allow
            Action:
              - codestar-connections:UseConnection
            Resource: '*'

          - Sid: CloudFormationPermissions
            Effect: Allow
            Action:
              - cloudformation:SetStackPolicy
              - cloudformation:GetStackPolicy
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:Describe*
              - cloudformation:ExecuteChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:ValidateTemplate
              - cloudformation:DescribeStacks
            Resource:
              - !Sub arn:aws:cloudformation:${Region}:*

          - Sid: ec2
            Effect: Allow
            Action:
              - ec2:Describe*
              - ec2:CreateVpc
              - ec2:DeleteVpc
              - ec2:DeleteSubnet
              - ec2:CreateSubnet
              - ec2:ModifySubnetAttribute
              - ec2:CreateRouteTable
              - ec2:DeleteRouteTable
              - ec2:AssociateRouteTable
              - ec2:DisassociateRouteTable
              - ec2:CreateTags
              - ec2:DeleteTags
              - ec2:ModifyVpcAttribute
              - ec2:CreateInternetGateway
              - ec2:DeleteInternetGateway
              - ec2:AttachInternetGateway
              - ec2:DetachInternetGateway
              - ec2:CreateDhcpOptions
              - ec2:DeleteDhcpOptions
              - ec2:AssociateDhcpOptions
              - ec2:CreateNetworkAcl
              - ec2:CreateNetworkAclEntry
              - ec2:DeleteNetworkAcl
              - ec2:DeleteNetworkAclEntry
              - ec2:ReplaceNetworkAclAssociation
              - ec2:ReplaceNetworkAclEntry
              - ec2:CreateRoute
              - ec2:DeleteRoute
              - ec2:AllocateAddress
              - ec2:CreateNatGateway
              - ec2:DeleteNatGateway
              - ec2:ReleaseAddress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:RunInstances
              - ec2:RevokeSecurityGroupIngress
              - ec2:AssociateAddress
              - ec2:DisassociateAddress
              - ec2:CreateSecurityGroup
              - ec2:DeleteSecurityGroup
              - ec2:ModifyInstanceAttribute
              - ec2:UpdateSecurityGroupRuleDescriptionsIngress
              - ec2:AttachNetworkInterface
              - ec2:CreateNetworkInterface
              - ec2:DeleteNetworkInterface
              - ec2:DetachNetworkInterface
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:ResetNetworkInterfaceAttribute
              - ec2:AssignPrivateIpAddresses
              - ec2:UnassignPrivateIpAddresses
              - ec2:describeAddresses
              - ec2:TerminateInstances
            Resource: '*'

          - Sid: Lambda
            Effect: Allow
            Action:
              - lambda:CreateFunction
              - lambda:DeleteFunction
              - lambda:ListTags
              - lambda:ListFunctions
              - lambda:UpdateFunctionConfiguration
              - lambda:RemovePermission
              - lambda:TagResource
              - lambda:GetFunction
              - lambda:AddPermission
              - lambda:InvokeFunction
            Resource:
              - !Sub arn:aws:lambda:${Region}:${AWS::AccountId}:function:*

          - Sid: iam
            Effect: Allow
            Action:
              - iam:GetRole
              - iam:PassRole
              - iam:DeleteRole
              - iam:PutRolePolicy
              - iam:GetRolePolicy
              - iam:DeleteRolePolicy
              - iam:CreateRole
              - iam:TagRole
              - iam:DetachRolePolicy
              - iam:AttachRolePolicy
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/*

          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
            Resource:
              - !Sub arn:aws:s3:::codepipeline-${Region}-*
              - arn:aws:s3:::secrets-manager-rotation-apps-*
              - !Sub "arn:aws:s3:::${Environment}-${Region}-sergio-codepipelines-project-deploymen*"

          - Sid: logs
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub arn:aws:logs:${Region}:${AWS::AccountId}:log-group:*

          - Sid: SecretsManager
            Effect: Allow
            Action:
              - secretsmanager:Describe*
              - secretsmanager:PutSecretValue
              - secretsmanager:TagResource
              - secretsmanager:CreateSecret
              - secretsmanager:DeleteSecret
              - secretsmanager:GetRandomPassword
              - secretsmanager:RotateSecret
              - secretsmanager:CancelRotateSecret
              - secretsmanager:ListSecrets
              - secretsmanager:UpdateSecretVersionStage
              - secretsmanager:GetSecretValue

            Resource: "*"

          - Sid: rds
            Effect: Allow
            Action:
              - rds:CreateDBSubnetGroup
              - rds:CreateDBClusterParameterGroup
              - rds:DeleteDBClusterParameterGroup
              - rds:ModifyDBClusterParameterGroup
              - rds:CreateDBParameterGroup
              - rds:DeleteDBParameterGroup
              - rds:ModifyDBParameterGroup
              - rds:DeleteDBSubnetGroup
              - rds:CreateDBCluster
              - rds:CreateDBInstance
              - rds:AddRoleToDBCluster
              - rds:ModifyDBInstance
              - rds:ModifyDBCluster
              - rds:DeleteDBCluster
              - rds:Describe*
            Resource: '*'

      Roles:
        - Ref: "CodePipelinesRole"

Outputs:
  CodePipelinesRole:
    Value: !Ref CodePipelinesRole
    Export:
      Name: !Sub "${Environment}-CodePipelines-Role"

  CodePipelinesRoleArn:
    Description: "ARN of CodePipelines-Role"
    Value: !GetAtt CodePipelinesRole.Arn
    Export:
      Name: !Sub "${Environment}-CodePipelines-Role-Arn"