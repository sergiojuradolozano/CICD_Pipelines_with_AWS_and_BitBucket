AWSTemplateFormatVersion: '2010-09-09'
Description: 'Role and Policy for Aurora-Postgres-Serverless-V2'
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - uat
      - prod
    Description: Enter dev, uat or prod. Default is dev
  Region:
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
      - eu-west-1
      - eu-central-1
      - eu-central-2

Mappings:
  DeploymentEnvironmentMap:
    dev:
      env: dev
    uat:
      env: uat
    prod:
      env: prod

Resources:
  AuroraV2Role:
    Type: "AWS::IAM::Role"
    Properties:
      Tags:
        - Key: Environment
          Value: !Join [ "", [ { "Fn::FindInMap": [ "DeploymentEnvironmentMap", !Ref Environment, "env" ] } ] ]
        - Key: Package
          Value: core-network
        - Key: Application
          Value: INFRA
      RoleName: "Aurora-Postgres-Serverless-V2-Role-CodePipeline"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
                - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"
  RolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: Aurora-Postgres-Serverless-V2-CodePipeline
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - codestar-connections:UseConnection
            Resource: '*'
          - Effect: Allow
            Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:StartBuild
              - codebuild:UpdateReport
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:BatchGetBuilds
              - codebuild:BatchGetProjects

            Resource:
              - !Sub arn:aws:codebuild:${Region}:${AWS::AccountId}:report-group/Core-Network-CodeBuild-*
              - !Sub arn:aws:codebuild:${Region}:${AWS::AccountId}:project/Aurora-Postgres-Serverless*

          - Effect: Allow
            Action:
              - lambda:CreateFunction
              - lambda:DeleteFunction
              - lambda:ListTags
              - lambda:RemovePermission
              - lambda:TagResource
              - lambda:UpdateFunctionConfiguration
              - iam:ListRoleTags
              - secretsmanager:DescribeSecret
              - secretsmanager:PutSecretValue
              - secretsmanager:TagResource
              - iam:TagRole
              - secretsmanager:CreateSecret
              - secretsmanager:DeleteSecret
              - iam:CreateRole
              - iam:AttachRolePolicy
              - s3:ListBucket
              - iam:PutRolePolicy
              - iam:PassRole
              - secretsmanager:GetSecretValue
              - iam:DeleteRolePolicy
              - iam:GetRole
              - lambda:InvokeFunction
              - lambda:GetFunction
              - iam:DeleteRole
              - s3:GetBucketAcl
              - logs:CreateLogStream
              - logs:CreateLogGroup
              - logs:PutLogEvents
              - s3:PutObject
              - s3:GetObject
              - lambda:AddPermission
              - secretsmanager:UpdateSecretVersionStage
              - iam:GetRolePolicy
              - s3:GetBucketLocation
              - s3:GetObjectVersion
              - secretsmanager:RotateSecret
              - secretsmanager:CancelRotateSecret
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/Aurora-Postgres-Serverless*
              - !Sub arn:aws:iam::${AWS::AccountId}:role/${Environment}*
              - !Sub arn:aws:iam::${AWS::AccountId}:role/secrets-manager-rotation-apps-*
              - !Sub arn:aws:logs:${Region}:${AWS::AccountId}:log-group:Aurora-Postgres-Serverless-V2*
              - !Sub arn:aws:lambda:${Region}:${AWS::AccountId}:function:${Environment}*
              - !Sub arn:aws:cloudformation:${Region}:aws:transform/SecretsManager-2020-07-23
              - !Sub arn:aws:cloudformation:${Region}:aws:transform/Serverless-2016-10-31
              - !Sub arn:aws:cloudformation:${Region}:${AWS::AccountId}:stack/${Environment}-serverless-v2*
              - !Sub arn:aws:cloudformation:${Region}:${AWS::AccountId}:stack/${Environment}-liquibase-server*
              - !Sub arn:aws:cloudformation:${Region}:${AWS::AccountId}:stack/${Environment}-database-users*
              - !Sub arn:aws:secretsmanager:${Region}:${AWS::AccountId}:secret:*
              - arn:aws:s3:::codepipeline-eu-central-1-*
              - arn:aws:s3:::codepipeline-eu-west-1-*
              - !Join [ "", [ "arn:aws:s3:::", { "Fn::FindInMap": [ "DeploymentEnvironmentMap", !Ref Environment, "env" ] }, ".", { "Fn::Sub": "${Region}" }, ".deployment*" ] ]
              - arn:aws:s3:::secrets-manager-rotation-apps-*
          - Sid: VisualEditor2
            Effect: Allow
            Action:
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:ModifySubnetAttribute
              - rds:DescribeDBSubnetGroups
              - rds:CreateDBSubnetGroup
              - rds:CreateDBClusterParameterGroup
              - rds:DeleteDBClusterParameterGroup
              - rds:DescribeDBClusterParameters
              - rds:ModifyDBClusterParameterGroup
              - rds:CreateDBParameterGroup
              - rds:DeleteDBParameterGroup
              - rds:DescribeEngineDefaultParameters
              - rds:ModifyDBParameterGroup
              - ec2:DescribeSecurityGroups
              - ec2:DescribeInstances
              - ec2:RunInstances
              - ec2:RevokeSecurityGroupIngress
              - ec2:AssociateAddress
              - ec2:DisassociateAddress
              - rds:DeleteDBSubnetGroup
              - secretsmanager:GetRandomPassword
              - rds:CreateDBCluster
              - rds:CreateDBInstance
              - ec2:CreateSecurityGroup
              - ec2:DeleteSecurityGroup
              - rds:DescribeDBInstances
              - rds:AddRoleToDBCluster
              - rds:ModifyDBInstance
              - rds:ModifyDBCluster
              - rds:DeleteDBCluster
              - rds:DescribeDBClusters
              - ec2:DescribeVpcs
              - ec2:DescribeSubnets
              - ec2:DescribeRouteTables
              - ec2:AssociateRouteTable
              - ec2:DisassociateRouteTable
              - ec2:CreateTags
              - ec2:DeleteTags
              - iam:DetachRolePolicy
              - ec2:AllocateAddress
              - ec2:ModifyInstanceAttribute
              - ec2:UpdateSecurityGroupRuleDescriptionsIngress
              - ec2:AttachNetworkInterface
              - ec2:CreateNetworkInterface
              - ec2:DeleteNetworkInterface
              - ec2:DetachNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:ResetNetworkInterfaceAttribute
              - ec2:AssignPrivateIpAddresses
              - ec2:UnassignPrivateIpAddresses
              - ec2:describeAddresses
              - ec2:TerminateInstances
            Resource: '*'

          - Sid: VisualEditor4
            Effect: Allow
            Action:
              - cloudformation:SetStackPolicy
              - cloudformation:GetStackPolicy
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:ValidateTemplate
              - cloudformation:DescribeStacks

            Resource:
              - !Sub arn:aws:cloudformation:${Region}:${AWS::AccountId}:stack/${Environment}-*
              - !Sub arn:aws:cloudformation:${Region}:aws:transform/SecretsManager-2020-07-23
              - !Sub arn:aws:cloudformation:${Region}:aws:transform/Serverless-2016-10-31
              - !Sub arn:aws:cloudformation:${Region}:aws:transform/SecretsManager-2020-07-23
              - !Sub arn:aws:cloudformation:${Region}:aws:transform/Serverless-2016-10-31
          - Sid: VisualEditor5
            Effect: Allow
            Action:
              - secretsmanager:GetRandomPassword
              - secretsmanager:ListSecrets
            Resource:
              - !Sub arn:aws:secretsmanager:${Region}:${AWS::AccountId}:secret:*
          - Sid: VisualEditor6
            Effect: Allow
            Action: rds:*
            Resource: arn:aws:rds-db:*:*:dbuser:*
          - Sid: VisualEditor7
            Effect: Allow
            Action: lambda:ListFunctions
            Resource:
              - !Sub arn:aws:lambda:${Region}:${AWS::AccountId}:function:${Environment}*
      Roles:
        - Ref: AuroraV2Role

Outputs:
  AuroraV2Role:
    Description: "ARN of Aurora-Postgres-Serverless-V2-Role-CodePipeline"
    Value: !Ref AuroraV2Role
    Export:
      Name: AuroraV2Role

  AuroraV2RoleArn:
    Description: "ARN of Aurora-Postgres-Serverless-V2-Role-CodePipeline"
    Value: !GetAtt AuroraV2Role.Arn
    Export:
      Name: AuroraV2RoleArn