AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploy -Core-Infrastructure CodePipeline"
Parameters:
  Environment:
    Type: String
    Default: dev-
    AllowedValues:
      - dev-
      - uat-
      - prod-
    Description: Enter dev-, uat- or prod-. Default is dev-

  Region:
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
      - eu-west-1
      - eu-central-1
      - eu-central-2

Mappings:
  DeploymentEnvironmentMap:
    dev-:
      env: dev
    uat-:
      env: uat
    prod-:
      env: prod

  SourceBranchMap:
    dev-:
      Branch: master
    uat-:
      Branch: uat--deployment
    prod-:
      Branch: prod--deployment

  SourceChangeMap:
    dev-:
      Change: true
    uat-:
      Change: false
    prod-:
      Change: false

Conditions:
  isDev: !Equals [ !Ref Environment, "dev-" ]

Resources:
  CoreInfrastructureConnection:
    Type: 'AWS::CodeStarConnections::Connection'
    Properties:
      ConnectionName: !Sub ${Environment}-Core-Infra
      ProviderType: Bitbucket
      Tags:
        - Key: Environment
          Value: !Join [ "", [ { "Fn::FindInMap": [ "DeploymentEnvironmentMap", !Ref Environment, "env" ] } ] ]
        - Key: Package
          Value: core-network
        - Key: Application
          Value: INFRA
        - Key: CostCentre
          Value: 

  CoreInfrastructureCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Tags:
        - Key: Environment
          Value: !Join [ "", [ { "Fn::FindInMap": [ "DeploymentEnvironmentMap", !Ref Environment, "env" ] } ] ]
        - Key: Package
          Value: core-network
        - Key: Application
          Value: INFRA
        - Key: CostCentre
          Value: 
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          env:
            shell: bash
          phases:
            install:
              runtime-versions:
                python: 3.9
              commands:
                - echo Entered the install phase...
                - pwd
                - ls -la
                - pip install boto3
            pre_build:
              commands:
                - export CODEBUILD_BUILD_NUMBER
                - export CODEBUILD_LOG_PATH
                - export CODEBUILD_SRC_DIR_SourceArtifact
            build:
              commands:
              - cd templates/core-infrastructure/
              - python3 ../../deploy-scripts/py-scripts/cloudformation/deployer/prepare_template.py -e ${Environment} -r ${Region} -c ../../templates/core-infrastructure/config
          
          artifacts:
            files:
              - '**/*'
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
      Name: -Core-Infrastructure #this is the name to reference this project inside the CodePipeline definition
      ServiceRole:
        Fn::ImportValue: CodePipelinesRole
      TimeoutInMinutes: 10
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: -Core-Infrastructure-CodeBuild

  CoreInfrastructureCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Tags:
        - Key: Environment
          Value: !Join [ "", [ { "Fn::FindInMap": [ "DeploymentEnvironmentMap", !Ref Environment, "env" ] } ] ]
        - Key: Package
          Value: core-network
        - Key: Application
          Value: INFRA
        - Key: CostCentre
          Value: 
      ArtifactStore:
        Type: S3
        Location: !Join [ ".", [ { "Fn::FindInMap": [ "DeploymentEnvironmentMap", !Ref Environment, "env" ] }, { "Fn::Sub": "${Region}" }, "-deployment" ] ]
      RestartExecutionOnUpdate:
        !If [ isDev, "true", "false" ]
      RoleArn:
        Fn::ImportValue: CodePipelinesRoleArn
      Name: "-Core-Infrastructure"
      Stages:
        - Name: Source
          Actions:
            -
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref CoreInfrastructureConnection
                DetectChanges: !FindInMap [ SourceChangeMap, !Ref Environment, Change ]
                BranchName: !FindInMap [ SourceBranchMap, !Ref Environment, Branch ]
                FullRepositoryId: ironhideETF/mat-infrastructure
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

            - Name: Scripts-and-Tags
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref CoreInfrastructureConnection
                DetectChanges: !FindInMap [ SourceChangeMap, !Ref Environment, Change ]
                BranchName: !FindInMap [ SourceBranchMap, !Ref Environment, Branch ]
                FullRepositoryId: ironhideETF/mat-deployment
              OutputArtifacts:
                - Name: Scripts-and-Tags
              RunOrder: 2

        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              RunOrder: 1
              Configuration:
                ProjectName: -Core-Infrastructure #reference to the CodeBuild project with this name. Must mach the name of an existing CodeBuild project
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact

        - Name: Infrastructure
          Actions:
            - Name: Infrastructure
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildArtifact
                - Name: Scripts-and-Tags
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue: CodePipelinesRoleArn
                StackName: !Sub ${Environment}-infrastructure-aws
                TemplateConfiguration: !Join [ "", [ "Scripts-and-Tags::TemplateConfiguration/mat-infrastructure/",{ "Fn::FindInMap": [ "DeploymentEnvironmentMap", !Ref Environment, "env" ] }, "/InfrastructureVersion.json" ] ]
                TemplatePath: BuildArtifact::templates/core-infrastructure/resource-templates/core-infrastructure/mat-infrastructure-aws_cloudformation.yaml
              RunOrder: 1
              Region: !Sub ${Region}