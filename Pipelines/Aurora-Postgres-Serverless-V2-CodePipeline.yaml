AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploy Aurora-Postgres-Serverless-V2-CodePipeline"
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - uat
      - prod
    Description: Enter dev, uat or prod. Default is dev

  Region: # The region value in --parameter-overrides from the the cli scripts need to be one of the Allowed values. If you will deploy the stacks in a different region add it to the list and it will overwrite the default value with the one from the cli script.
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
      - eu-west-1
      - eu-central-1
      - eu-central-2

Mappings:

  SourceBranchMap:
    dev:
      Branch: dev-deployment
    uat:
      Branch: uat-deployment
    prod:
      Branch: prod-deployment

  SourceChangeMap:
    dev:
      Change: true
    uat:
      Change: false
    prod:
      Change: false

Conditions:
  isDev: !Equals [ !Ref Environment, "dev" ]

Resources:
  AuroraPostgresServerlessV2Connection:
    Type: 'AWS::CodeStarConnections::Connection'
    Properties:
      ConnectionName: !Sub ${Environment}-Aurora-Postgres
      ProviderType: Bitbucket
      Tags:
        - Key: Environment
          Value: !Sub ${Environment}
        - Key: Package
          Value: core-network
        - Key: Application
          Value: INFRA

  AuroraPostgresServerlessCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Tags:
        - Key: Environment
          Value: !Sub ${Environment}
        - Key: Package
          Value: core-network
        - Key: Application
          Value: INFRA

      ArtifactStore:
        Type: S3
        Location:
          Fn::ImportValue: !Sub ${Environment}.${AWS::Region}.sergio-project-deployment
      RestartExecutionOnUpdate:
        !If [ isDev, "true", "false" ]
      RoleArn:
        Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn
      Name: Aurora-Postgres-Serverless-V2
      Stages:
        - Name: Source
          Actions:
            -
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref AuroraPostgresServerlessV2Connection
                DetectChanges: !FindInMap [ SourceChangeMap, !Ref Environment, Change ]
                BranchName: !FindInMap [ SourceBranchMap, !Ref Environment, Branch ]
                FullRepositoryId: ironhideETF/mat-infrastructure
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

        - Name: Aurora-Postgres-Serverless-v2
          Actions:
            - Name: Aurora-Postgres-Serverless-v2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildArtifact
                - Name: Scripts-and-Tags
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn:
                  Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn
                StackName: !Sub ${Environment}-aurora-postgres-serverless-v2
                TemplateConfiguration: !Sub "SourceArtifact::Template-Configuration/${Environment}/TemplateConfiguration.json" 
                TemplatePath: !Sub SourceArtifact::templates/aurora-postgresql_cloudformation.yaml
              RunOrder: 1
              Region: !Sub ${Region}
