AWSTemplateFormatVersion: '2010-09-09'
Description: 'Role and Policy for -Core-Network'
Parameters:
  Environment:
    Type: String
    Default: dev-
    AllowedValues:
      - dev-
      - uat-
      - prod-
    Description: Enter dev-, uat- or prod-. Default is dev-
  Region:
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
      - eu-west-1
      - eu-central-1
      - eu-central-2

Mappings:
  DeploymentEnvironmentMap:
    dev-:
      env: dev
    uat-:
      env: uat
    prod-:
      env: prod

Resources:
  CoreNetworkRole:
    Type: "AWS::IAM::Role"
    Properties:
      Tags:
        - Key: Environment
          Value: !Join [ "", [ { "Fn::FindInMap": [ "DeploymentEnvironmentMap", !Ref Environment, "env" ] } ] ]
        - Key: Package
          Value: core-network
        - Key: Application
          Value: INFRA
        - Key: CostCentre
          Value: 
      RoleName: "-Core-Network-Role-CodePipeline"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"
  RolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "-Core-Network-Role-CodePipeline"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - codestar-connections:UseConnection
            Resource: '*'
          - Sid: CodeBuildPermissions
            Effect: Allow
            Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
              - codebuild:BatchGetProjects
            Resource:
              - !Sub arn:aws:codebuild:${Region}:${AWS::AccountId}:project/-Core-Network
          - Sid: CloudFormationPermissions
            Effect: Allow
            Action:
              - cloudformation:DescribeStacks
              - cloudformation:GetStackPolicy
              - cloudformation:ValidateTemplate
              - cloudformation:CreateStack
              - cloudformation:UpdateStack
              - cloudformation:DeleteStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
            Resource:
              - !Sub arn:aws:cloudformation:${Region}:${AWS::AccountId}:stack/${Environment}*
          - Effect: Allow
            Action:
              - ec2:DescribeInstances
              - ec2:CreateVpc
              - ec2:DeleteVpc
              - ec2:DescribeVpcs
              - ec2:DeleteSubnet
              - ec2:CreateSubnet
              - ec2:ModifySubnetAttribute
              - ec2:DescribeSubnets
              - ec2:CreateRouteTable
              - ec2:DeleteRouteTable
              - ec2:DescribeRouteTables
              - ec2:AssociateRouteTable
              - ec2:DisassociateRouteTable
              - ec2:CreateTags
              - ec2:DeleteTags
              - ec2:ModifyVpcAttribute
              - ec2:DescribeInternetGateways
              - ec2:CreateInternetGateway
              - ec2:DeleteInternetGateway
              - ec2:AttachInternetGateway
              - ec2:DetachInternetGateway
              - ec2:DescribeDhcpOptions
              - ec2:CreateDhcpOptions
              - ec2:DeleteDhcpOptions
              - ec2:AssociateDhcpOptions
              - ec2:CreateNetworkAcl
              - ec2:CreateNetworkAclEntry
              - ec2:DeleteNetworkAcl
              - ec2:DeleteNetworkAclEntry
              - ec2:DescribeNetworkAcls
              - ec2:ReplaceNetworkAclAssociation
              - ec2:ReplaceNetworkAclEntry
              - ec2:CreateRoute
              - ec2:DeleteRoute
              - ec2:AllocateAddress
              - ec2:CreateNatGateway
              - ec2:DeleteNatGateway
              - ec2:DescribeNatGateways
              - ec2:ReleaseAddress
              - route53:CreateHostedZone
              - route53:ChangeTagsForResource
              - route53:GetHostedZone
              - route53:ListHostedZones
              - route53:GetChange
              - route53:ListQueryLoggingConfigs
              - route53:DeleteHostedZone
            Resource: '*'
          - Effect: Allow
            Action:
              - lambda:CreateFunction
              - lambda:ListTags
              - lambda:UpdateFunctionConfiguration
              - lambda:TagResource
              - iam:PassRole
              - iam:TagRole
              - lambda:GetFunction
              - lambda:DeleteFunction
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/-Core-Network-Role-CodePipeline
              - !Sub arn:aws:lambda:${Region}:${AWS::AccountId}:function:*
          - Effect: Allow
            Action:
              - iam:GetRole
              - iam:PassRole
              - iam:DeleteRole
              - iam:PutRolePolicy
              - iam:GetRolePolicy
              - iam:DeleteRolePolicy
              - iam:CreateRole
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/*
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
            Resource:
              - !Join ["", ["arn:aws:s3:::", {"Fn::FindInMap" : ["DeploymentEnvironmentMap", !Ref Environment, "env"]}, ".", {"Fn::Sub" : "${Region}"}, ".-deployment*" ] ]
              - !Sub arn:aws:s3:::codepipeline-${Region}-*
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub arn:aws:logs:${Region}:${AWS::AccountId}:log-group:/aws/codebuild/-Core-Network*
              - !Sub arn:aws:logs:${Region}:${AWS::AccountId}:log-group:-Core-Networ*
          - Effect: Allow
            Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Resource:
              - !Sub arn:aws:codebuild:${Region}:${AWS::AccountId}:report-group/-Core-Network*
      Roles:
        - Ref: "CoreNetworkRole"

Outputs:
  CoreNetworkRole:
    Value: !Ref CoreNetworkRole
    Export:
      Name: CoreNetworkRole

  CoreNetworkRoleArn:
    Description: "ARN of -Core-Network-Role-CodePipeline"
    Value: !GetAtt CoreNetworkRole.Arn
    Export:
      Name: CoreNetworkRoleArn