AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploy -Core-Network CodePipeline"
Parameters:
  Environment:
    Type: String
    Default: dev-
    AllowedValues:
      - dev-
      - uat-
      - prod-
    Description: Enter dev-, uat- or prod-. Default is dev-

  Region:
    Type: String
    Default: us-east-1
    AllowedValues:
      - us-east-1
      - eu-west-1
      - eu-central-1
      - eu-central-2

Mappings:
  DeploymentEnvironmentMap:
    dev-:
      env: dev
    uat-:
      env: uat
    prod-:
      env: prod

  SourceBranchMap:
    dev-:
      Branch: master
    uat-:
      Branch: uat--deployment
    prod-:
      Branch: prod--deployment

  SourceChangeMap:
    dev-:
      Change: true
    uat-:
      Change: false
    prod-:
      Change: false

Conditions:
  isDev: !Equals [ !Ref Environment, "dev-" ]

Resources:

  DeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${Environment}.${AWS::Region}.sergio-project-deployment
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

  CoreNetworkConnection:
    Type: 'AWS::CodeStarConnections::Connection'
    Properties:
      ConnectionName: !Sub ${Environment}-Core-Network
      ProviderType: Bitbucket
      Tags:
        - Key: Environment
          Value: !Sub ${Environment}
        - Key: Package
          Value: core-network
        - Key: Application
          Value: INFRA

  CoreNetworkCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: DeploymentBucket
    Properties:
      Tags:
        - Key: Environment
          Value: !Sub ${Environment}
        - Key: Package
          Value: core-network
        - Key: Application
          Value: INFRA

      ArtifactStore:
        Type: S3
        Location: !GetAtt DeploymentBucket.Arn

      RestartExecutionOnUpdate:
        !If [ isDev, "true", "false" ]

      RoleArn:
        Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn

      Name: -Core-Network
      
      Stages:
        - Name: Source
          Actions:
            -
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref CoreNetworkConnection
                DetectChanges: !FindInMap [ SourceChangeMap, !Ref Environment, Change ]
                BranchName: !FindInMap [ SourceBranchMap, !Ref Environment, Branch ]
                FullRepositoryId: Project/ci-cd_with_aws
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

        - Name: VPC
          Actions:
            - Name: VPC
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn
                StackName: !Sub ${Environment}-vpc
                TemplateConfiguration: !Sub "SourceArtifact::Template-Configuration/${Environment}/TemplateConfiguration.json"
                TemplatePath: !Sub SourceArtifact::templates/core-network/resource-templates/core-network/-${Region}-vpc_cloudformation.yaml
              RunOrder: 1
              Region: !Sub ${Region}

        - Name: Network-ACLs
          Actions:
            - Name: 1a-network-acl
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn
                StackName: !Sub ${Environment}-1a-network-acl
                TemplateConfiguration: !Sub "SourceArtifact::Template-Configuration/${Environment}/TemplateConfiguration.json"
                TemplatePath: !Sub SourceArtifact::templates/core-network/resource-templates/core-network/-${Region}a-network-acl_cloudformation.yaml
              RunOrder: 1
              Region: !Sub ${Region}
              
            - Name: 1b-network-acl
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn
                StackName: !Sub ${Environment}-1b-network-acl
                TemplateConfiguration: !Sub "SourceArtifact::Template-Configuration/${Environment}/TemplateConfiguration.json"
                TemplatePath: !Sub SourceArtifact::templates/core-network/resource-templates/core-network/-${Region}b-network-acl_cloudformation.yaml
              RunOrder: '2'
              Region: !Sub ${Region}

        - Name: Subnets
          Actions:
            - Name: Subnet1a
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn
                StackName: !Sub ${Environment}-1a-subnet
                TemplateConfiguration: !Sub "SourceArtifact::Template-Configuration/${Environment}/TemplateConfiguration.json"
                TemplatePath: !Sub SourceArtifact::templates/core-network/resource-templates/core-network/-${Region}a-subnet_cloudformation.yaml
              RunOrder: 1
              Region: !Sub ${Region}

            - Name: Subnet1b
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn
                StackName: !Sub ${Environment}-1b-subnet
                TemplateConfiguration: !Sub "SourceArtifact::Template-Configuration/${Environment}/TemplateConfiguration.json"
                TemplatePath: !Sub SourceArtifact::templates/core-network/resource-templates/core-network/-${Region}b-subnet_cloudformation.yaml
              RunOrder: '2'
              Region: !Sub ${Region}

        - Name: NAT-Gateway
          Actions:
            - Name: NAT-Gateway
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn
                StackName: !Sub ${Environment}-1a-natgateway
                TemplateConfiguration: !Sub "SourceArtifact::Template-Configuration/${Environment}/TemplateConfiguration.json"
                TemplatePath: !Sub SourceArtifact::templates/core-network/resource-templates/core-network/-${Region}a-natgateway_cloudformation.yaml
              RunOrder: 1
              Region: !Sub ${Region}

        - Name: Route53-ZoneID
          Actions:
            - Name: Route53-ZoneID
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn
                StackName: !Sub ${Environment}-route53-zoneid
                TemplateConfiguration: !Sub "SourceArtifact::Template-Configuration/${Environment}/TemplateConfiguration.json"
                TemplatePath: !Sub SourceArtifact::templates/core-network/resource-templates/core-network/-${Region}-route53-zoneid_cloudformation.yaml
              RunOrder: 1
              Region: !Sub ${Region}

        - Name: Route53
          Actions:
            - Name: Route53-Public
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn
                StackName: !Sub ${Environment}-route53-public
                TemplateConfiguration: !Sub "SourceArtifact::Template-Configuration/${Environment}/TemplateConfiguration.json"
                TemplatePath: !Sub SourceArtifact::templates/core-network/resource-templates/core-network/-${Region}-route53-public_cloudformation.yaml
              RunOrder: 1
              Region: !Sub ${Region}

            - Name: Route53-Private
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue: !Sub ${Environment}-CodePipelines-Role-Arn
                StackName: !Sub ${Environment}-route53-private
                TemplateConfiguration: !Sub "SourceArtifact::Template-Configuration/${Environment}/TemplateConfiguration.json"
                TemplatePath: !Sub SourceArtifact::templates/core-network/resource-templates/core-network/-${Region}-route53-private_cloudformation.yaml
              RunOrder: '2'
              Region: !Sub ${Region}

Outputs:
  DeploymentBucket:
    Value: !GetAtt DeploymentBucket.Arn
    Export:
      Name: !Sub ${Environment}.${AWS::Region}.sergio-project-deployment